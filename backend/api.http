POST https://chess-api.com/v1
Content-Type: application/json

{
  "fen": "rnbqkb1r/ppp1pppp/5n2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3"
}


### Valid Request
POST http://127.0.0.1:5000/evaluate_move
Content-Type: application/json
{
  "fen": "rnbqkbnr/p1pppppp/8/1p6/3PP3/8/PPP2PPP/RNBQKBNR b KQkq d3 0 2",
  "move": "b2b4"
}
### Missing FEN Field
POST http://127.0.0.1:5000/evaluate_move
Content-Type: application/json

{
  "move": "e7e5"
}
### Missing Move Field
POST http://127.0.0.1:5000/evaluate_move
Content-Type: application/json

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2"
}
### Invalid FEN String
POST http://127.0.0.1:5000/evaluate_move
Content-Type: application/json

{
  "fen": "invalid_fen_string",
  "move": "e7e5"
}
### Invalid Move Notation
POST http://127.0.0.1:5000/evaluate_move
Content-Type: application/json

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2",
  "move": "Kb4"
}

### Empty Request Body
POST http://127.0.0.1:5000/evaluate_move
Content-Type: application/json

{}

### Non-JSON Content Type
POST http://127.0.0.1:5000/evaluate_move
Content-Type: text/plain

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2",
  "move": "e7e5"
}

### Valide request
POST http://127.0.0.1:5000/suggest_move
Content-Type: application/json

{
  "fen": "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
}

### Invalid FEN String
POST http://127.0.0.1:5000/suggest_move
Content-Type: application/json
{
  "fen": "invalid_fen_string"
}

### Empty Request Body
POST http://127.0.0.1:5000/suggest_move
Content-Type: application/json

{}

### Non-JSON Content Type
POST http://127.0.0.1:5000/suggest_move
Content-Type: text/plain

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2",
}

### Valide request
POST http://127.0.0.1:5000/game_status
Content-Type: application/json

{
  "fen": "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1"
}

### Invalid FEN String
POST http://127.0.0.1:5000/game_status
Content-Type: application/json

{
  "fen": "invalid_fen_string"
}

### Empty Request Body
POST http://127.0.0.1:5000/game_status
Content-Type: application/json

{}

### Non-JSON Content Type
POST http://127.0.0.1:5000/game_status
Content-Type: text/plain

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2",
}

### Valid Request
POST http://127.0.0.1:5000/answer_question
Content-Type: application/json

{
  "fen": "r2qkbnr/pp3ppp/2np4/2p1pb2/3PP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 1",
  "question": "string"
}

Response:
{
   "answer": string
}

### Missing FEN field
POST http://127.0.0.1:5000/answer_question
Content-Type: application/json

{
  "question": "string"
}

Response:
{
    "message": "Both 'fen' and 'question' fields are required.",
    "type": "invalid_request"
}

### Missing question field
POST http://127.0.0.1:5000/answer_question
Content-Type: application/json

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2",
}

Response:
{
    "message": "Both 'fen' and 'question' fields are required.",
    "type": "invalid_request"
}

### Invalid FEN string
POST http://127.0.0.1:5000/answer_question
Content-Type: application/json

{
  "fen": "invalid_fen_string",
  "question": "string"
}

Response:
{
   "message": "Invalid FEN string provided"
   "type": "invalid_fen_notation"
}

### Invalid question string
POST http://127.0.0.1:5000/answer_question
Content-Type: application/json

{
  "fen": "r2qkbnr/pp3ppp/2np4/2p1pb2/3PP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 1",
  "question": "invalid_question_string"
}

Response:
{
   "message": "Invalid question string provided" 
   "type": "invalid_question"
}

### Valid Request
POST http://127.0.0.1:5000/get_bot_move
Content-Type: application/json

{
  "fen": "r2qkbnr/pp3ppp/2np4/2p1pb2/3PP3/5N2/PPP2PPP/RNBQKB1R w KQkq - 0 1",
  "depth": 10
}
### Missing FEN Field
POST http://127.0.0.1:5000/get_bot_move
Content-Type: application/json

{
  "depth": 10
}
### Missing Depth Field
POST http://127.0.0.1:5000/get_bot_move
Content-Type: application/json

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2"
}
### Invalid FEN String
POST http://127.0.0.1:5000/get_bot_move
Content-Type: application/json

{
  "fen": "invalid_fen_string",
  "depth": 10
}
### Invalid Depth Notation
POST http://127.0.0.1:5000/get_bot_move
Content-Type: application/json

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2",
  "depth": "10"
}

### Empty Request Body
POST http://127.0.0.1:5000/get_bot_move
Content-Type: application/json

{}

### Non-JSON Content Type
POST http://127.0.0.1:5000/get_bot_move
Content-Type: text/plain

{
  "fen": "r1bqkbnr/pppppppp/2n5/8/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 2 2",
  "depth": "10"
}}


# Test PR #31
# evaluate_move Payload/Request

{
fen: "rnbqkbnr/ppp1pppp/8/3p4/3P4/8/PPP1PPPP/RNBQKBNR w KQkq d6 0 2",
move: "g1f3"
}

# evaluate_move Response
{
    evaluation: 0.26,
    feedback: " Based on the current state of the board, as requested, the move then...",
    player_made_move: "w"
}

#Payload sent to Stockfish
# Original Payload (this one will give error if sent to the stockfish)
{fen: "rnbqkb1r/ppp1pppp/5n2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq c3 0 3", 
depth: 6}

# New Changed fen Payload, which the Stockfish will accept
{fen: "rnbqkb1r/ppp1pppp/5n2/3p4/2PP4/5N2/PP2PPPP/RNBQKB1R b KQkq - 0 3", 
depth: 6}


# Stockfish Response:
{bot_move:"e7e6"}